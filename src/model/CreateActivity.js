/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActivityTypeEnum from './ActivityTypeEnum';
import VisibilityEnum from './VisibilityEnum';

/**
 * The CreateActivity model module.
 * @module model/CreateActivity
 * @version 1.0
 */
class CreateActivity {
    /**
     * Constructs a new <code>CreateActivity</code>.
     * # The Activity Object ### Description The &#x60;Activity&#x60; object is used to represent an activity performed by a user.
     * @alias module:model/CreateActivity
     */
    constructor() { 
        
        CreateActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateActivity} obj Optional instance to populate.
     * @return {module:model/CreateActivity} The populated <code>CreateActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateActivity();

            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('activity_type')) {
                obj['activity_type'] = ApiClient.convertToType(data['activity_type'], ActivityTypeEnum);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], VisibilityEnum);
            }
            if (data.hasOwnProperty('remote_user_id')) {
                obj['remote_user_id'] = ApiClient.convertToType(data['remote_user_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The user the performed the action.
 * @member {String} user
 */
CreateActivity.prototype['user'] = undefined;

/**
 * The activity's type.
 * @member {module:model/ActivityTypeEnum} activity_type
 */
CreateActivity.prototype['activity_type'] = undefined;

/**
 * The activity's subject.
 * @member {String} subject
 */
CreateActivity.prototype['subject'] = undefined;

/**
 * The activity's body.
 * @member {String} body
 */
CreateActivity.prototype['body'] = undefined;

/**
 * The activity's visibility.
 * @member {module:model/VisibilityEnum} visibility
 */
CreateActivity.prototype['visibility'] = undefined;

/**
 * @member {String} remote_user_id
 */
CreateActivity.prototype['remote_user_id'] = undefined;






export default CreateActivity;

