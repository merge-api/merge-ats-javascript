/**
 * Merge ATS API
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemoteData from './RemoteData';
import Status757Enum from './Status757Enum';

/**
 * The Job model module.
 * @module model/Job
 * @version 1.0
 */
class Job {
    /**
     * Constructs a new <code>Job</code>.
     * # The Job Object ### Description The &#x60;Job&#x60; object is used to represent a Location offering at a company.  ### Usage Example Fetch from the &#x60;LIST Jobs&#x60; endpoint and filter by &#x60;ID&#x60; to show all job postings.
     * @alias module:model/Job
     */
    constructor() { 
        
        Job.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Job} obj Optional instance to populate.
     * @return {module:model/Job} The populated <code>Job</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('remote_id')) {
                obj['remote_id'] = ApiClient.convertToType(data['remote_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], Status757Enum);
            }
            if (data.hasOwnProperty('remote_created_at')) {
                obj['remote_created_at'] = ApiClient.convertToType(data['remote_created_at'], 'Date');
            }
            if (data.hasOwnProperty('remote_updated_at')) {
                obj['remote_updated_at'] = ApiClient.convertToType(data['remote_updated_at'], 'Date');
            }
            if (data.hasOwnProperty('confidential')) {
                obj['confidential'] = ApiClient.convertToType(data['confidential'], 'Boolean');
            }
            if (data.hasOwnProperty('departments')) {
                obj['departments'] = ApiClient.convertToType(data['departments'], ['String']);
            }
            if (data.hasOwnProperty('offices')) {
                obj['offices'] = ApiClient.convertToType(data['offices'], ['String']);
            }
            if (data.hasOwnProperty('hiring_managers')) {
                obj['hiring_managers'] = ApiClient.convertToType(data['hiring_managers'], ['String']);
            }
            if (data.hasOwnProperty('remote_data')) {
                obj['remote_data'] = ApiClient.convertToType(data['remote_data'], [RemoteData]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Job.prototype['id'] = undefined;

/**
 * The third-party API ID of the matching object.
 * @member {String} remote_id
 */
Job.prototype['remote_id'] = undefined;

/**
 * The job's name.
 * @member {String} name
 */
Job.prototype['name'] = undefined;

/**
 * The job's description.
 * @member {String} description
 */
Job.prototype['description'] = undefined;

/**
 * The job's status.
 * @member {module:model/Status757Enum} status
 */
Job.prototype['status'] = undefined;

/**
 * When the third party's job was created.
 * @member {Date} remote_created_at
 */
Job.prototype['remote_created_at'] = undefined;

/**
 * When the third party's job was updated.
 * @member {Date} remote_updated_at
 */
Job.prototype['remote_updated_at'] = undefined;

/**
 * Whether the job is confidential.
 * @member {Boolean} confidential
 */
Job.prototype['confidential'] = undefined;

/**
 * @member {Array.<String>} departments
 */
Job.prototype['departments'] = undefined;

/**
 * @member {Array.<String>} offices
 */
Job.prototype['offices'] = undefined;

/**
 * @member {Array.<String>} hiring_managers
 */
Job.prototype['hiring_managers'] = undefined;

/**
 * @member {Array.<module:model/RemoteData>} remote_data
 */
Job.prototype['remote_data'] = undefined;






export default Job;

